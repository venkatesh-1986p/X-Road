dependencies {
    compile project(':serverconf')
    compile project(':common-ui')

    compile 'wsdl4j:wsdl4j:1.6.3'
    compile 'io.swagger.parser.v3:swagger-parser-v3:2.0.13'
}

clean {
    doLast {
        project.delete "vendor/engines/common-ui"
        project.delete "log/development.log"
        project.delete "public/javascripts/translations.js"
    }
}

task copyCommon(type: Copy) {
    into "vendor/engines/common-ui"
    from "../common-ui"
    include "Gemfile"
    include "Rakefile"
    include "common-ui.gemspec"
    include "config/"
    include "lib/**"
    include "app/**"
    include "public/**"
}

task copyDeps(dependsOn: copyCommon, type: Copy) {
    into "$buildDir/libs"
    from configurations.compile
}

task generateJsTranslations(type: Exec) {
    commandLine = ['jruby', '-S', 'rake', 'i18n:js:export']
}

task warble(dependsOn: [copyDeps, ':proxy-ui:build', generateJsTranslations], type: Exec) {
    commandLine = ['jruby', '-S', 'warble']
}

task deploy(dependsOn: [warble], type: Exec) {
     commandLine = ['mv', 'build/libs/proxy-ui.war', 'build/libs/proxy-ui-deploy.war']
}

task benchmarkServerconfReadWrite(dependsOn: [copyDeps], type: Exec) {
    commandLine = ['jruby', '-S', 'rake', 'test:benchmark']
}

task checkRubySource(type: Exec) {
    inputs.files fileTree('app') + fileTree('lib')
    outputs.files file('build/rubocop-result.json')
    commandLine = getRubySourceCheckCommand("$projectDir")
}

check.dependsOn checkRubySource
build.dependsOn copyDeps

sonarqube {
    properties {
        properties["sonar.sources"] += [file('app'), file('lib'), file('public')]
        property "sonar.ruby.rubocop.reportPath", file('build/rubocop-result.json')
    }
}
