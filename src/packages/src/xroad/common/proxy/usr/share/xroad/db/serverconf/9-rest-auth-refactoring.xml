<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
    xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.3.xsd">

    <changeSet id="9-accessright-refactor" author="niis">
        <addColumn tableName="accessright">
            <column name="endpoint_id" type="bigint"/>
        </addColumn>
        <createTable tableName="endpoint">
            <column name="id" type="BIGINT">
                <constraints nullable="false" primaryKey="true"/>
            </column>
            <column name="client_id" type="bigint">
                <constraints foreignKeyName="fk_endpoint_client"
                             references="client(id)"
                             deleteCascade="true"/>
            </column>
            <column name="servicecode" type="varchar(255)">
                <constraints nullable="false"/>
            </column>
            <column name="method" type="varchar(255)">
                <constraints nullable="false"/>
            </column>
            <column name="path" type="varchar(2048)">
                <constraints nullable="false"/>
            </column>
        </createTable>
        <sql splitStatements="false">
            <![CDATA[
            insert into endpoint
                select nextval('hibernate_sequence'), a.* from
                    (select distinct client_id, servicecode, coalesce(method,'*'), coalesce(path,'**')
                     from accessright) a;
            update accessright a
                set endpoint_id = (select id from endpoint
                    where (client_id, servicecode) = (a.client_id, a.servicecode)
                    and ((method = '*' and a.method is null) or method = a.method)
                    and ((path = '**' and a.path is null) or path = a.path));
            insert into endpoint(id, client_id, servicecode, method, path)
                select nextval('hibernate_sequence'), t.client_id, t.servicecode, '*', '**' from
                    (select distinct d.client_id, s.servicecode
                    from service s join servicedescription d on (s.servicedescription_id = d.id)
                    where not exists (
                        select null from accessright a
                        where a.client_id = d.client_id
                        and a.servicecode = s.servicecode)) t;
            ]]>
        </sql>

        <dropColumn tableName="accessright">
            <column name="servicecode"/>
            <column name="method"/>
            <column name="path"/>
        </dropColumn>

        <addForeignKeyConstraint baseTableName="accessright"
                                 baseColumnNames="endpoint_id"
                                 constraintName="fk_accessright_endpoint"
                                 referencedTableName="endpoint"
                                 referencedColumnNames="id"
                                 onDelete="CASCADE"/>

        <addNotNullConstraint tableName="accessright" columnName="endpoint_id"/>

        <createIndex tableName="endpoint" indexName="ix_endpoint" unique="true">
            <column name="client_id"/>
            <column name="servicecode"/>
            <column name="method"/>
            <column name="path"/>
        </createIndex>

    </changeSet>

    <changeSet id="xrddev-615" author="niis">
        <addColumn tableName="endpoint">
            <column name="generated" type="boolean" value="true"/>
        </addColumn>
    </changeSet>
</databaseChangeLog>
